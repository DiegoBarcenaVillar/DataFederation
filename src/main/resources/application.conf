akka {

  loglevel = INFO
  stdout-loglevel = INFO


  actor {
    //provider = cluster
    provider = "akka.cluster.ClusterActorRefProvider"

    serializers {
      //java = "akka.serialization.JavaSerializer"
      primitive-string = "akka.remote.serialization.StringSerializer"

    }
    additional-serialization-bindings {
      "java.lang.String" = primitive-string

    }




    //serialization-bindings {
      //"java.lang.String" = java

    //}
  }
  remote {

    log-received-messages = on
    log-sent-messages = on
    log-remote-lifecycle-events = on

    enabled-transports = ["akka.remote.netty.tcp"]

//    log-remote-lifecycle-events = off
    netty.tcp {
      transport-class = "akka.remote.transport.netty.NettyTransport"
      transport-protocol = tcp
      port = 4579
      hostname = "127.0.0.1"
      receive-buffer-size = 256000b
      maximum-frame-size = 2000000000b

    }



//    artery {
 //     enabled = on
  //    transport = aeron-udp
  //    canonical.hostname = "127.0.0.1"
  //    canonical.port = 4579
  //  }

  }


  cluster {
    seed-nodes = [
      "akka.tcp://ClusterSystem@127.0.0.1:2551",
      "akka.tcp://ClusterSystem@127.0.0.1:2552"]

    # auto downing is NOT safe for production deployments.
    # you may want to use it during development, read more about it in the docs.
    # auto-down-unreachable-after = 10s
  }
}

# Enable metrics extension in akka-cluster-metrics.
# akka.extensions=["akka.cluster.metrics.ClusterMetricsExtension"]

# Sigar native library extract location during tests.
# Note: use per-jvm-instance folder when running multiple jvm on one host.
# akka.cluster.metrics.native-library-extract-folder=${user.dir}/target/native
# enable receptionist at start
extensions = ["akka.cluster.client.ClusterClientReceptionist","akka.cluster.pubsub.DistributedPubSub"]

